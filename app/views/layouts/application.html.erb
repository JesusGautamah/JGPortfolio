<!DOCTYPE html>
<html>
  <head>
    <title>GausamahPortfolio</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    
    
  </head>

  <body>
    <header id="header" class="fixed-top d-flex align-items-center">

      <!--- Logo ---->
      <h1 class="logo me-auto me-lg-0">

        <a href="/" id="title-header" style="margin-left: 25px;">Jesus Gautamah</a>

      </h1>

      <div class="container-fluid container-xl d-flex align-items-center justify-content-lg-between">
   
        <nav id="navbar" class="navbar order-last order-lg-0">

          <ul>
            <li><a class="nav-link" href="/">Home</a></li>         
          </ul>

          <% @sections.each do |section| %>

            <ul>
              <li><a class="nav-link" href="/"><%= section.title %></a></li>         
            </ul>
            
          <% end %>
          <ul>
          <li class="dropdown >"><a class="nav-link" href="/"><span>GitHub</span></a>

              <ul>

            
                


                <!--- GitHub Card ---->

                  
                  <div class="github-card" data-github="JesusGautamah" data-width="300" data-height="170" data-theme="default"></div>
                  <script src="//cdn.jsdelivr.net/github-cards/latest/widget.js"></script>


                
              </ul>
            </li>
            </ul>
            <button  class="main-btn mobile-nav-toggle"><a id="nav-toggle" style="margin-left: -25px;margin-top: -10px;">menu</a></button>

        </nav>  

      </div>

    </header>

    <section class="hero" id="hero">

      <div class="container text-center">

            <div class="container text-center border-gradient border-gradient-purple" id="hero-col"  >
                
                <br>
                <%= image_tag "gg.jpg", style: "width: 160px; height:auto; border-radius: 160px;" %>
                <br>
                <br>
                <h1 style=" font-size: 30px;">Hi, i'm Jesus Gautamah </h1>
                <h1 style=" font-size: 30px;"> Welcome to my portfolio </h1>
                <br>

    
              </div>
              <div class="container">
                
              </div>
            </div>
          </div>
          

      </div>

    </section>
  <div class="main" id="main">
  <br>
    <div class="container-fluid section-bg " id="main-content" style="border-radius: 20px; width: 90%; ">
    
    <%= yield %>
    </div>
</div>




  <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/5.3.7/js/swiper.min.js"></script>
  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"></script>
  <script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js"></script>

  <script type="text/javascript">
    const lightbox = GLightbox({ ...options });
  </script>


  <script>


    AOS.init();

  </script>

  <script>

  setTimeout(function(){
    $('#notice-place').remove();
  },3500);

    (function() {
  "use strict";
    
  /**
   * Easy selector helper function
   */
  const select = (el, all = false) => {
    el = el.trim()
    if (all) {
      return [...document.querySelectorAll(el)]
    } else {
      return document.querySelector(el)
    }
  }

  /**
   * Easy event listener function
   */
  const on = (type, el, listener, all = false) => {
    let selectEl = select(el, all)
    if (selectEl) {
      if (all) {
        selectEl.forEach(e => e.addEventListener(type, listener))
      } else {
        selectEl.addEventListener(type, listener)
      }
    }
  }

  /**
   * Easy on scroll event listener 
   */
  const onscroll = (el, listener) => {
    el.addEventListener('scroll', listener)
  }

  /**
   * Navbar links active state on scroll
   */
  let navbarlinks = select('#navbar .scrollto', true)
  const navbarlinksActive = () => {
    let position = window.scrollY + 200
    navbarlinks.forEach(navbarlink => {
      if (!navbarlink.hash) return
      let section = select(navbarlink.hash)
      if (!section) return
      if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {
        navbarlink.classList.add('active')
      } else {
        navbarlink.classList.remove('active')
      }
    })
  }
  window.addEventListener('load', navbarlinksActive)
  onscroll(document, navbarlinksActive)

  /**
   * Scrolls to an element with header offset
   */
  const scrollto = (el) => {
    let header = select('#header')
    let offset = header.offsetHeight

    let elementPos = select(el).offsetTop
    window.scrollTo({
      top: elementPos - offset,
      behavior: 'smooth'
    })
  }

  /**
   * Toggle .header-scrolled class to #header when page is scrolled
   */
  let selectHeader = select('#header')
  let selectTopbar = select('#topbar')
  if (selectHeader) {
    const headerScrolled = () => {
      if (window.scrollY > 100) {
        selectHeader.classList.add('header-scrolled')
        if (selectTopbar) {
          selectTopbar.classList.add('topbar-scrolled')
        }
      } else {
        selectHeader.classList.remove('header-scrolled')
        if (selectTopbar) {
          selectTopbar.classList.remove('topbar-scrolled')
        }
      }
    }
    window.addEventListener('load', headerScrolled)
    onscroll(document, headerScrolled)
  }

  /**
   * Mobile nav toggle
   */
  on('click', '.mobile-nav-toggle', function(e) {
    select('#navbar').classList.toggle('navbar-mobile')
    select('#hide').classList.toogle('sidenav-hidden')
    

    if (select('#nav-toggle').textContent === "menu") {
      select('#nav-toggle').innerHTML = "fechar menu"
    } else {
      select('#nav-toggle').innerHTML = "menu"
    }
  })


  

   /**
   * Side nav toggle
   */
  on('click', '#hide', function(e) {
    select('#sidenav').classList.toggle('sidenav-hidden')
    


    if (select('#hide').textContent === "fechar") {
      select('#hide').innerHTML = "ferramentas"
    } else {
      select('#hide').innerHTML = "fechar"
    }
      
  })

  

  
  /**
   * Mobile nav dropdowns activate
   */
  on('click', '.navbar .dropdown > a', function(e) {
    if (select('#navbar').classList.contains('navbar-mobile')) {
      e.preventDefault()
      this.nextElementSibling.classList.toggle('dropdown-active')
    }
  }, true)

  /**
   * Scrool with ofset on links with a class name .scrollto
   */
  on('click', '.scrollto', function(e) {
    if (select(this.hash)) {
      e.preventDefault()

      let navbar = select('#navbar')
      if (navbar.classList.contains('navbar-mobile')) {
        navbar.classList.remove('navbar-mobile')
        let navbarToggle = select('.mobile-nav-toggle')
        navbarToggle.classList.toggle('bi-list')
        navbarToggle.classList.toggle('bi-x')
      }
      scrollto(this.hash)
    }
  }, true)

  /**
   * Scroll with ofset on page load with hash links in the url
   */
  window.addEventListener('load', () => {
    if (window.location.hash) {
      if (select(window.location.hash)) {
        scrollto(window.location.hash)
      }
    }
  });
  /**
   * Menu isotope and filter
   */
  window.addEventListener('load', () => {
    let menuContainer = select('.menu-container');
    if (menuContainer) {
      let menuIsotope = new Isotope(menuContainer, {
        itemSelector: '.menu-item',
        layoutMode: 'fitRows'
      });

      let menuFilters = select('#menu-flters li', true);

      on('click', '#menu-flters li', function(e) {
        e.preventDefault();
        menuFilters.forEach(function(el) {
          el.classList.remove('filter-active');
        });
        this.classList.add('filter-active');

        menuIsotope.arrange({
          filter: this.getAttribute('data-filter')
        });
        menuIsotope.on('arrangeComplete', function() {
          AOS.refresh()
        });
      }, true);
    }

  });

  /**
   * Initiate glightbox 
   */
  const glightbox = GLightbox({
    selector: '.glightbox'
  });

  /**
   * courses slider
   */
  new Swiper('.courses-slider', {
    speed: 600,
    loop: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    slidesPerView: 'auto',
    pagination: {
      el: '.swiper-pagination',
      type: 'bullets',
      clickable: true
    }
  });

  
  

  /**
   * comments slider
   */
  new Swiper('.comments-slider', {
    speed: 600,
    loop: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    slidesPerView: 'auto',
    pagination: {
      el: '.swiper-pagination',
      type: 'bullets',
      clickable: true
    },
    breakpoints: {
      320: {
        slidesPerView: 1,
        spaceBetween: 20
      },

      1200: {
        slidesPerView: 3,
        spaceBetween: 20
      }
    }
  });


  
  /**
   * Initiate gallery lightbox 
   */
  const galleryLightbox = GLightbox({
    selector: '.gallery-lightbox'
  });

  /**
   * Animation on scroll
   */
  window.addEventListener('load', () => {
    AOS.init({
      duration: 1000,
      easing: 'ease-in-out',
      once: true,
      mirror: false
    })
  });

})()

  </script>

   
  </body>
</html>
